@typeparam TValue
@using System.Globalization
@inherits InputBase<TValue>

<input @attributes="AdditionalAttributes" type="radio" value="@SelectedValue"
        checked="@(SelectedValue.Equals(Value))" @onchange="OnChange" disabled="@IsDisabled"/>

@code {

    [Parameter]
    public TValue SelectedValue { get; set; }

    [Parameter]
    public bool IsDisabled { get; set; }

    private void OnChange(ChangeEventArgs args)
    {
        CurrentValueAsString = args.Value.ToString();
    }

    protected override bool TryParseValueFromString(string value,
        out TValue result, out string errorMessage)
    {
        var success = BindConverter.TryConvertTo<TValue>(
            value, CultureInfo.CurrentCulture, out var parsedValue);
        if (success)
        {
            result = parsedValue;
            errorMessage = null;

            return true;
        }
        result = default;
        errorMessage = $"{FieldIdentifier.FieldName} field isn't valid.";

        return false;
    }

}