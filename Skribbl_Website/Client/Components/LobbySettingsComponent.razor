@inject LobbyConnection LobbyConnection

<h1>Blazor Skribbl</h1>
<h3>Prepare the game using following settings:</h3>
<EditForm Model="LobbySettings" OnValidSubmit="OnValuesChanged" class="mt-3">
    <div class="rounds-input d-flex flex-row">
        <span class="rounds-input--title">Rounds:</span>
        <div class="rounds-input--radios d-flex flex-row">
            @foreach (var roundLimit in LobbySettings.PossibleRoundsLimit)
            {
                <label class="mx-1">
                    <InputRadio name="round" SelectedValue="roundLimit" @bind-Value="LobbySettings.RoundsLimit" @onclick="OnValuesChanged" IsDisabled="!IsHost"/>
                    @roundLimit
                </label>
            }
        </div>
    </div>
    <div class="time-input d-flex flex-row">
        <span class="time-input--title">Time:</span>
        <div class="time-input--radios d-flex flex-row">
            @foreach (var timeLimit in LobbySettings.PossibleTimeLimit)
            {
                <label class="mx-1">
                    <InputRadio name="time" SelectedValue="timeLimit" @bind-Value="@LobbySettings.TimeLimit" @onclick="OnValuesChanged" IsDisabled="!IsHost"/>
                    @timeLimit
                </label>
            }
        </div>
    </div>
</EditForm>
<div> Rounds: @LobbySettings.RoundsLimit</div>
<div> Time: @LobbySettings.TimeLimit</div>
<button class="start-button mt-2" @onclick="LobbyConnection.StartGame"> Start Game!</button>


@code {

    [Parameter]
    public LobbySettings LobbySettings { get; set; }

    [Parameter]
    public bool IsHost { get; set; }


    private async Task OnValuesChanged()
    {
        await Task.Delay(50);
        await LobbyConnection.UpdateLobbySettings();
    }

}