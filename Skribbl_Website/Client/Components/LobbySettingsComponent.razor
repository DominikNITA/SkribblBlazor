@inject LobbyConnection LobbyConnection
<div class="border border-info">
    <h3>LobbySettingsComponent</h3>
    <EditForm Model="_lobbySettings" OnValidSubmit="OnValuesChanged">
        <div class="rounds-input d-flex flex-row">
            <span class="rounds-input--title">Rounds:</span>
            <div class="rounds-input--radios d-flex flex-row">
                @foreach (var roundLimit in _lobbySettings.PossibleRoundsLimit)
                {
                    <label>
                        <InputRadio name="round" SelectedValue="roundLimit" @bind-Value="_lobbySettings.RoundsLimit" @onclick="OnValuesChanged" />
                        @roundLimit
                    </label>
                }
            </div>
        </div>
        <div class="time-input d-flex flex-row">
            <span class="time-input--title">Time:</span>
            <div class="time-input--radios d-flex flex-row">
                @foreach (var timeLimit in _lobbySettings.PossibleTimeLimit)
                {
                    <label>
                        <InputRadio name="time" SelectedValue="timeLimit" @bind-Value="_lobbySettings.TimeLimit" @onclick="OnValuesChanged" />
                        @timeLimit
                    </label>
                }
            </div>
        </div>
    </EditForm>
    <div> Rounds: @_lobbySettings.RoundsLimit</div>
    <div> Time: @_lobbySettings.TimeLimit</div>
</div>

@code {
    private LobbySettings _lobbySettings;

    protected override Task OnInitializedAsync()
    {
        _lobbySettings = LobbyConnection.Lobby.LobbySettings;
        return base.OnInitializedAsync();
    }

    private async Task OnValuesChanged()
    {
        await Task.Delay(50);
        LobbyConnection.Lobby.LobbySettings = _lobbySettings;
        await LobbyConnection.UpdateLobbySettings();
    }
}
